@charset "UTF-8";
/**
 *
 * Stylesheet import
 *
 */
/* Breakpoints
   ================================================================================================================== */
/* Colors
   ================================================================================================================== */
/* Typograhy
   ================================================================================================================== */
/* Link colors
   ================================================================================================================== */
/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/
/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */
/*------------------------------------*\
    $INTRODUCTION
\*------------------------------------*/
/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */
/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to ‘false’:
 */
/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */
/**
 * Set the spacing between your grid items.
 */
/**
 * Would you like Sass’ silent classes, or regular CSS classes?
 */
/**
 * Would you like push and pull classes enabled?
 */
/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */
/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */
/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */
/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin’!
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
/**
 * Drop relative positioning into silent classes which can’t take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */
/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
/* line 240, ../sass/base/_grid.scss */
.header--inner {
  display: inline-block;
  /* [1] */
  padding-left: 2em;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  -webkit-box-sizing: border-box;
  /* [5] */
  -moz-box-sizing: border-box;
  /* [5] */
  box-sizing: border-box;
  /* [5] */
}

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */
/**
 * Align the entire grid to the right. Extends `.grid`.
 */
/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
/* line 301, ../sass/base/_grid.scss */
.header {
  text-align: center;
}
/* line 304, ../sass/base/_grid.scss */
.header > .header--inner {
  text-align: left;
}

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
/**
 * Create grids with wider gutters. Extends `.grid`.
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
/**
 * Our regular, non-responsive width classes.
 */
/**
 * Whole
 */
/**
 * Halves
 */
/**
 * Thirds
 */
/**
 * Quarters
 */
/**
 * Fifths
 */
/**
 * Sixths
 */
/**
 * Eighths
 */
/**
 * Tenths
 */
/**
 * Twelfths
 */
/**
 * Our responsive classes, if we have enabled them.
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /* line 420, ../sass/base/_grid.scss */
  .header--inner {
    width: 87.5%;
  }

  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /* line 389, ../sass/base/_grid.scss */
  .header--inner {
    width: 75%;
  }

  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (min-width: 1700px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /* line 397, ../sass/base/_grid.scss */
  .header--inner {
    width: 60%;
  }

  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
/* line 581, ../sass/base/_grid.scss */
[class*="push--"] {
  position: relative;
}

/**
 * Whole
 */
/**
 * Halves
 */
/**
 * Thirds
 */
/**
 * Quarters
 */
/**
 * Fifths
 */
/**
 * Sixths
 */
/**
 * Eighths
 */
/**
 * Tenths
 */
/**
 * Twelfths
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
@media only screen and (min-width: 1700px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */
}
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */
/**
 *
 * Mixins
 *
 */
/**
 * Normalize
 *
 * Normalize.css v2.1.2 | MIT License | git.io/normalize
 */
/* HTML5 display definitions
   ================================================================================================================== */
/* Correct `block` display not defined in IE 8/9. */
/* line 14, ../sass/base/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/* Correct `inline-block` display not defined in IE 8/9. */
/* line 32, ../sass/base/_normalize.scss */
audio,
canvas,
video {
  display: inline-block;
}

/* Prevent modern browsers from displaying `audio` without controls. */
/* Remove excess height in iOS 5 devices. */
/* line 42, ../sass/base/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0;
}

/* Address styling not present in IE 8/9. */
/* line 49, ../sass/base/_normalize.scss */
[hidden] {
  display: none;
}

/* Base
   ================================================================================================================== */
/* 1. Set default fontello family to sans-serif. */
/* 2. Prevent iOS text size adjust after orientation change, without disabling user zoom. */
/* line 60, ../sass/base/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Remove default margin. */
/* line 69, ../sass/base/_normalize.scss */
body {
  margin: 0;
}

/* Links
   ================================================================================================================== */
/* Address `outline` inconsistency between Chrome and other browsers. */
/* line 79, ../sass/base/_normalize.scss */
a:focus {
  outline: thin dotted;
}

/* Improve readability when focused and also mouse hovered in all browsers. */
/* line 85, ../sass/base/_normalize.scss */
a:active,
a:hover {
  outline: 0;
}

/* Typography
   ================================================================================================================== */
/* Address variable `h1` fontello-size and margin within `section` and `article` */
/* contexts in Firefox 4+, Safari 5, and Chrome. */
/* line 96, ../sass/base/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Address styling not present in IE 8/9, Safari 5, and Chrome. */
/* line 103, ../sass/base/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted;
}

/* Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. */
/* line 109, ../sass/base/_normalize.scss */
b,
strong {
  font-weight: bold;
}

/* Address styling not present in Safari 5 and Chrome. */
/* line 116, ../sass/base/_normalize.scss */
dfn {
  font-style: italic;
}

/* Address differences between Firefox and other browsers. */
/* line 122, ../sass/base/_normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/* Address styling not present in IE 8/9. */
/* line 130, ../sass/base/_normalize.scss */
mark {
  background: #ff0;
  color: #000;
}

/* Correct fontello family set oddly in Safari 5 and Chrome. */
/* line 137, ../sass/base/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/* Improve readability of pre-formatted text in all browsers. */
/* line 147, ../sass/base/_normalize.scss */
pre {
  white-space: pre-wrap;
}

/* Set consistent quote types. */
/* line 153, ../sass/base/_normalize.scss */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/* Address inconsistent and variable fontello size in all browsers. */
/* line 159, ../sass/base/_normalize.scss */
small {
  font-size: 80%;
}

/* Prevent `sub` and `sup` affecting `line-height` in all browsers. */
/* line 165, ../sass/base/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* line 173, ../sass/base/_normalize.scss */
sup {
  top: -0.5em;
}

/* line 177, ../sass/base/_normalize.scss */
sub {
  bottom: -0.25em;
}

/* Embedded content
   ================================================================================================================== */
/* Remove border when inside `a` element in IE 8/9. */
/* line 187, ../sass/base/_normalize.scss */
img {
  border: 0;
}

/* Correct overflow displayed oddly in IE 9. */
/* line 193, ../sass/base/_normalize.scss */
svg:not(:root) {
  overflow: hidden;
}

/* Figures
   ================================================================================================================== */
/* Address margin not present in IE 8/9 and Safari 5. */
/* line 203, ../sass/base/_normalize.scss */
figure {
  margin: 0;
}

/* Forms
   ================================================================================================================== */
/* Define consistent border, margin, and padding. */
/* line 213, ../sass/base/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/* 1. Correct `color` not being inherited in IE 8/9. */
/* 2. Remove padding so people aren't caught out if they zero out fieldsets. */
/* line 222, ../sass/base/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/* 1. Correct fontello family not being inherited in all browsers. */
/* 2. Correct fontello size not being inherited in all browsers. */
/* 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome. */
/* line 231, ../sass/base/_normalize.scss */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/* Address Firefox 4+ setting `line-height` on `input` using `!important` in */
/* the UA stylesheet. */
/* line 243, ../sass/base/_normalize.scss */
button,
input {
  line-height: normal;
}

/* Address inconsistent `text-transform` inheritance for `button` and `select`. */
/* All other form control elements do not inherit `text-transform` values. */
/* Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+. */
/* Correct `select` style inheritance in Firefox 4+ and Opera. */
/* line 253, ../sass/base/_normalize.scss */
button,
select {
  text-transform: none;
}

/* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. */
/* 2. Correct inability to style clickable `input` types in iOS. */
/* 3. Improve usability and consistency of cursor style between image-type `input` and others. */
/* line 262, ../sass/base/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/* Re-set default cursor for disabled elements. */
/* line 272, ../sass/base/_normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default;
}

/* 1. Address box sizing set to `content-box` in IE 8/9. */
/* 2. Remove excess padding in IE 8/9. */
/* line 280, ../sass/base/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/* 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome. */
/* 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome (include `-moz` to future-proof). */
/* line 289, ../sass/base/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/* Remove inner padding and search cancel button in Safari 5 and Chrome on OS X. */
/* line 298, ../sass/base/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/* Remove inner padding and border in Firefox 4+. */
/* line 305, ../sass/base/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* 1. Remove default vertical scrollbar in IE 8/9. */
/* 2. Improve readability and alignment in all browsers. */
/* line 314, ../sass/base/_normalize.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* Tables
   ================================================================================================================== */
/* Remove most spacing between table cells. */
/* line 325, ../sass/base/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/**
 * Base
 *
 * Contains styling and reset of basic elements
 *
 */
/* line 8, ../sass/base/_base.scss */
html {
  height: 100%;
}

/* line 12, ../sass/base/_base.scss */
body {
  overflow-y: scroll;
  height: 100%;
  background-color: white;
  color: black;
  font: 1em/1.5 "Exo 2", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

/* line 23, ../sass/base/_base.scss */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: .5em;
  font-family: "Exo 2", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: normal;
  /* This fixes huge spaces when a heading wraps onto two lines */
  line-height: 1.2;
  /* Voodoo to enable ligatures and kerning */
  text-rendering: optimizeLegibility;
}

/* line 43, ../sass/base/_base.scss */
strong {
  font-weight: bold;
}

/* line 48, ../sass/base/_base.scss */
em {
  font-style: italic;
}
/* line 51, ../sass/base/_base.scss */
em strong {
  font-weight: bold;
}

/* Links
   ================================================================================================================== */
/* line 62, ../sass/base/_base.scss */
a:link {
  color: #f0f1d2;
  text-decoration: underline;
}
/* line 67, ../sass/base/_base.scss */
a:visited {
  color: #eaebbf;
}
/* line 71, ../sass/base/_base.scss */
a:hover {
  color: #e3e5ab;
  text-decoration: none;
}
/* line 76, ../sass/base/_base.scss */
a:focus {
  color: #e3e5ab;
}

/* Paragraph
   ================================================================================================================== */
/* line 85, ../sass/base/_base.scss */
p {
  margin-top: 0;
  margin-bottom: 0;
}

/* Image
   ================================================================================================================== */
/* line 94, ../sass/base/_base.scss */
img {
  display: inline;
  height: auto;
  max-width: 100%;
  vertical-align: bottom;
}

/* Header
   ================================================================================================================== */
/* line 4, ../sass/layout/_layout.scss */
.header {
  position: relative;
  height: 100%;
  width: 100%;
  background: url("/images/header-background.jpg") no-repeat left;
  color: white;
  -moz-background-size: cover;
  -o-background-size: cover;
  -webkit-background-size: cover;
  background-size: cover;
}
@media only screen and (min-width: 481px) {
  /* line 4, ../sass/layout/_layout.scss */
  .header {
    background-position: center;
  }
}
/* line 22, ../sass/layout/_layout.scss */
.header--inner {
  position: relative;
  top: 50%;
  padding: 4.5em 1.5em 1.5em;
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}
/* line 37, ../sass/layout/_layout.scss */
.header--big {
  font-size: 2em;
  font-weight: 600;
  text-align: center;
  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.25);
}
@media only screen and (min-width: 481px) {
  /* line 37, ../sass/layout/_layout.scss */
  .header--big {
    font-size: 3em;
  }
}
@media only screen and (min-width: 1024px) {
  /* line 37, ../sass/layout/_layout.scss */
  .header--big {
    font-size: 3.5em;
    text-shadow: 4px 4px 0 rgba(0, 0, 0, 0.25);
  }
}
@media screen and (orientation: landscape) and (max-height: 287px) {
  /* line 37, ../sass/layout/_layout.scss */
  .header--big {
    font-size: 1.5em;
  }
}
